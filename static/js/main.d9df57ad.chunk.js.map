{"version":3,"sources":["Box.js","NewBoxForm.js","BoxList.js","App.js","reportWebVitals.js","index.js"],"names":["Box","style","height","this","props","width","backgroundColor","color","onClick","removeBox","Component","NewBoxForm","state","handleChange","bind","handleSubmit","evt","setState","target","name","value","preventDefault","newBox","id","uuidv4","createBox","onSubmit","htmlFor","type","onChange","BoxList","boxes","create","filter","box","map","remove","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAuBeA,E,4JAnBd,WACC,OACM,gCACF,qBAAKC,MAAO,CACMC,OAAO,GAAD,OAAIC,KAAKC,MAAMF,OAAf,MACNG,MAAM,GAAD,OAAIF,KAAKC,MAAMC,MAAf,MACLC,gBAAiBH,KAAKC,MAAMG,SAM9C,wBAAQC,QAASL,KAAKC,MAAMK,UAA5B,sB,GAbYC,a,sBCgEHC,E,kDA/DX,WAAYP,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAQ,CAACV,OAAO,GAAGG,MAAM,GAAGE,MAAM,IACvC,EAAKM,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJN,E,gDAOlB,SAAaE,GACTb,KAAKc,SAAL,eACMD,EAAIE,OAAOC,KAAMH,EAAIE,OAAOE,U,0BAMtC,SAAaJ,GACTA,EAAIK,iBACJ,IAAMC,EAAM,2BAAOnB,KAAKS,OAAZ,IAAmBW,GAAGC,gBAClCrB,KAAKC,MAAMqB,UAAUH,GACrBnB,KAAKc,SAAS,CACVf,OAAO,GACPG,MAAM,GACNE,MAAM,O,oBAId,WACI,OACI,uBAAMmB,SAAUvB,KAAKY,aAArB,UACI,gCACI,uBAAOY,QAAQ,SAAf,oBACA,uBACKC,KAAK,OACNT,KAAK,SACLC,MAAOjB,KAAKS,MAAMV,OAClB2B,SAAU1B,KAAKU,aACfU,GAAG,cAEX,gCACI,uBAAOI,QAAQ,QAAf,mBACA,uBACKC,KAAK,OACNT,KAAK,QACLC,MAAOjB,KAAKS,MAAMP,MAClBwB,SAAU1B,KAAKU,aACfU,GAAG,aAEX,gCACI,uBAAOI,QAAQ,QAAf,mBACA,uBACKC,KAAK,OACNT,KAAK,QACLC,MAAOjB,KAAKS,MAAML,MAClBsB,SAAU1B,KAAKU,aACfU,GAAG,aAGX,wD,GA1DSb,aC0CVoB,E,kDAvCT,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAQ,CAACmB,MAAO,IACrB,EAAKC,OAAS,EAAKA,OAAOlB,KAAZ,gBAHA,E,0CAOlB,SAAOS,GACHpB,KAAKc,SAAS,CACVc,MAAM5B,KAAKS,MAAMmB,MAAME,QAAO,SAAAC,GAAG,OAAIA,EAAIX,KAAOA,S,oBAGxD,SAAOD,GACDnB,KAAKc,SAAS,CACVc,MAAM,GAAD,mBAAK5B,KAAKS,MAAMmB,OAAhB,CAAsBT,Q,oBAGvC,WAAU,IAAD,OACCS,EAAQ5B,KAAKS,MAAMmB,MAAMI,KAAI,SAAAD,GAAG,OAClC,cAAC,EAAD,CAEIX,GAAIW,EAAIX,GACRrB,OAAQgC,EAAIhC,OACZG,MAAO6B,EAAI7B,MACXE,MAAO2B,EAAI3B,MACXE,UAAW,kBAAI,EAAK2B,OAAOF,EAAIX,MAL1BW,EAAIX,OASjB,OACI,gCACI,iDACA,cAAC,EAAD,CAAaE,UAAWtB,KAAK6B,SAC5BD,S,GAlCKrB,aCYP2B,G,kKAXd,WACE,OACE,qBAAKC,UAAU,MAAf,SAEI,cAAC,EAAD,U,GALS5B,cCOH6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9df57ad.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\n\r\n\r\nclass Box extends Component {\r\n\trender(){\r\n\t\treturn(\r\n        <div>\r\n\t\t    <div style={{\r\n                        height:`${this.props.height}em`,\r\n                        width:`${this.props.width}em`,\r\n                        backgroundColor: this.props.color\r\n\t\t\t            }}\r\n            \r\n             />\r\n        \r\n\r\n\t\t    <button onClick={this.props.removeBox}>X</button>\r\n        </div>\r\n\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default Box;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass NewBoxForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {height:\"\",width:\"\",color:\"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n             [evt.target.name]:evt.target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        const newBox = {...this.state, id:uuidv4()};\r\n        this.props.createBox(newBox);\r\n        this.setState({\r\n            height:\"\",\r\n            width:\"\",\r\n            color:\"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"height\">Height</label>\r\n                    <input\r\n                         type='text' \r\n                        name='height' \r\n                        value={this.state.height} \r\n                        onChange={this.handleChange}\r\n                        id='height'/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"width\">Width</label>\r\n                    <input\r\n                         type='text' \r\n                        name='width' \r\n                        value={this.state.width} \r\n                        onChange={this.handleChange}\r\n                        id='width'/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"color\">Color</label>\r\n                    <input\r\n                         type='text' \r\n                        name='color' \r\n                        value={this.state.color} \r\n                        onChange={this.handleChange}\r\n                        id='color'/>\r\n                </div>\r\n\r\n                <button>Add New Box</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewBoxForm;","import React, { Component } from 'react';\r\nimport Box from './Box';\r\nimport NewBoxForm from './NewBoxForm';\r\n\r\n\r\nclass BoxList extends Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {boxes: []};\r\n          this.create = this.create.bind(this);\r\n      }\r\n\r\n\r\n      remove(id){\r\n          this.setState({\r\n              boxes:this.state.boxes.filter(box => box.id !== id)\r\n          });\r\n      }\r\n      create(newBox){\r\n            this.setState({\r\n                boxes:[...this.state.boxes,newBox]\r\n            })\r\n      }\r\n    render() {\r\n        const boxes = this.state.boxes.map(box => (\r\n            <Box \r\n                key={box.id}\r\n                id={box.id}\r\n                height={box.height} \r\n                width={box.width} \r\n                color={box.color}\r\n                removeBox={()=>this.remove(box.id)}\r\n\r\n            />\r\n        ));\r\n        return (\r\n            <div>\r\n                <h1>Color Box Maker</h1>\r\n                <NewBoxForm  createBox={this.create}/>\r\n                {boxes}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BoxList;","import React, {Component} from 'react'; \nimport BoxList from './BoxList';\nimport './App.css';\n\n\nclass App extends Component {\n render() {\n   return (\n     <div className=\"App\">\n\n         <BoxList/>\n         \n       \n     </div>\n   );\n }\n}\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}